package com.anbaric.terra_reforged.util.init;

import com.anbaric.terra_reforged.TerraReforged;
import com.anbaric.terra_reforged.blocks.*;
import com.anbaric.terra_reforged.blocks.potionplants.*;
import com.anbaric.terra_reforged.util.*;
import net.minecraft.tags.BlockTags;
import net.minecraft.world.level.block.*;
import net.minecraft.world.level.block.state.BlockBehaviour;
import net.minecraft.world.level.material.Material;
import net.minecraft.world.level.material.MaterialColor;
import net.minecraftforge.registries.DeferredRegister;
import net.minecraftforge.registries.ForgeRegistries;
import net.minecraftforge.registries.RegistryObject;

public class TerraBlockRegistry
{
    public static final DeferredRegister<Block> BLOCKS = DeferredRegister.create(ForgeRegistries.BLOCKS, Reference.MODID);

    //Soils
    public static final RegistryObject<Block> SOIL_MUD = BLOCKS.register("soil_mud", () -> new Block(BlockBehaviour.Properties.of(Material.DIRT).sound(SoundType.GRAVEL).strength(0.7F)));
    public static final RegistryObject<Block> SOIL_ASH = BLOCKS.register("soil_ash", () -> new Block(BlockBehaviour.Properties.of(Material.SAND).sound(SoundType.SAND).strength(0.7F)));
    public static final RegistryObject<Block> SNOW_CORRUPT = BLOCKS.register("snow_corrupt", () -> new Block(BlockBehaviour.Properties.of(Material.SNOW).sound(SoundType.SNOW).strength(0.5F, 3.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SNOW_CRIMSON = BLOCKS.register("snow_crimson", () -> new Block(BlockBehaviour.Properties.of(Material.SNOW).sound(SoundType.SNOW).strength(0.5F, 3.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SNOW_HALLOWED = BLOCKS.register("snow_hallowed", () -> new Block(BlockBehaviour.Properties.of(Material.SNOW).sound(SoundType.SNOW).strength(0.5F, 3.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SNOW_CORRUPT_LAYER = BLOCKS.register("snow_corrupt_layer", () -> new SnowLayerBlock(BlockBehaviour.Properties.of(Material.SNOW).sound(SoundType.SNOW).strength(0.1F).randomTicks()));
    public static final RegistryObject<Block> SNOW_CRIMSON_LAYER = BLOCKS.register("snow_crimson_layer", () -> new SnowLayerBlock(BlockBehaviour.Properties.of(Material.SNOW).sound(SoundType.SNOW).strength(0.1F).randomTicks()));
    public static final RegistryObject<Block> SNOW_HALLOWED_LAYER = BLOCKS.register("snow_hallowed_layer", () -> new SnowLayerBlock(BlockBehaviour.Properties.of(Material.SNOW).sound(SoundType.SNOW).strength(0.1F).randomTicks()));
    public static final RegistryObject<Block> GRASS_JUNGLE = BLOCKS.register("grass_jungle", () -> new TerraBlockMudGrass(BlockBehaviour.Properties.of(Material.GRASS).sound(SoundType.GRASS).strength(0.5F, 3.0F).randomTicks()));
    public static final RegistryObject<Block> GRASS_MUSHROOM = BLOCKS.register("grass_mushroom", () -> new TerraBlockMudGrass(BlockBehaviour.Properties.of(Material.GRASS).sound(SoundType.GRASS).strength(0.5F, 3.0F).randomTicks()));
    public static final RegistryObject<Block> GRASS_CORRUPT = BLOCKS.register("grass_corrupt", () -> new TerraBlockBiomeGrass(BlockBehaviour.Properties.of(Material.GRASS).sound(SoundType.WET_GRASS).strength(0.5F, 3.0F).randomTicks()));
    public static final RegistryObject<Block> GRASS_CRIMSON = BLOCKS.register("grass_crimson", () -> new TerraBlockBiomeGrass(BlockBehaviour.Properties.of(Material.GRASS).sound(SoundType.WET_GRASS).strength(0.5F, 3.0F).randomTicks()));
    public static final RegistryObject<Block> GRASS_HALLOWED = BLOCKS.register("grass_hallowed", () -> new TerraBlockBiomeGrass(BlockBehaviour.Properties.of(Material.GRASS).sound(SoundType.GRASS).strength(0.5F, 3.0F).randomTicks()));
    public static final RegistryObject<Block> SAND_CORRUPT = BLOCKS.register("sand_ebon", () -> new SandBlock(1, BlockBehaviour.Properties.of(Material.SAND).sound(SoundType.SAND).strength(0.5F)));
    public static final RegistryObject<Block> SAND_CRIMSON = BLOCKS.register("sand_crim", () -> new SandBlock(1, BlockBehaviour.Properties.of(Material.SAND).sound(SoundType.SAND).strength(0.5F)));
    public static final RegistryObject<Block> SAND_HALLOWED = BLOCKS.register("sand_pearl", () -> new SandBlock(1, BlockBehaviour.Properties.of(Material.SAND).sound(SoundType.SAND).strength(0.5F)));
    public static final RegistryObject<Block> SAND_SILT = BLOCKS.register("sand_silt", () -> new SandBlock(1, BlockBehaviour.Properties.of(Material.SAND).sound(SoundType.SAND).strength(0.5F)));
    public static final RegistryObject<Block> SAND_SLUSH = BLOCKS.register("sand_slush", () -> new SandBlock(1, BlockBehaviour.Properties.of(Material.SAND).sound(SoundType.SAND).strength(0.5F)));
    public static final RegistryObject<Block> HARD_SAND = BLOCKS.register("sand_hard", () -> new SandBlock(1, BlockBehaviour.Properties.of(Material.SAND).sound(SoundType.SAND).strength(1.0F)));
    public static final RegistryObject<Block> HARD_SAND_CORRUPT = BLOCKS.register("sand_hardebon", () -> new SandBlock(1, BlockBehaviour.Properties.of(Material.SAND).sound(SoundType.SAND).strength(1.0F)));
    public static final RegistryObject<Block> HARD_SAND_CRIMSON = BLOCKS.register("sand_hardcrim", () -> new SandBlock(1, BlockBehaviour.Properties.of(Material.SAND).sound(SoundType.SAND).strength(1.0F)));
    public static final RegistryObject<Block> HARD_SAND_HALLOWED = BLOCKS.register("sand_hardpearl", () -> new SandBlock(1, BlockBehaviour.Properties.of(Material.SAND).sound(SoundType.SAND).strength(1.0F)));

    //Stones
    public static final RegistryObject<Block> SANDSTONE_EBON = BLOCKS.register("sandstone_ebon", () -> new Block(BlockBehaviour.Properties.of(Material.STONE).sound(SoundType.STONE).strength(0.8F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SANDSTONE_EBON_CHISELED = BLOCKS.register("sandstone_ebon_chiseled", () -> new Block(BlockBehaviour.Properties.of(Material.STONE).sound(SoundType.STONE).strength(0.8F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SANDSTONE_EBON_SMOOTH = BLOCKS.register("sandstone_ebon_smooth", () -> new Block(BlockBehaviour.Properties.of(Material.STONE).sound(SoundType.STONE).strength(0.8F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SANDSTONE_EBON_CUT = BLOCKS.register("sandstone_ebon_cut", () -> new Block(BlockBehaviour.Properties.of(Material.STONE).sound(SoundType.STONE).strength(0.8F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SANDSTONE_CRIM = BLOCKS.register("sandstone_crim", () -> new Block(BlockBehaviour.Properties.of(Material.STONE).sound(SoundType.STONE).strength(0.8F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SANDSTONE_CRIM_CHISELED = BLOCKS.register("sandstone_crim_chiseled", () -> new Block(BlockBehaviour.Properties.of(Material.STONE).sound(SoundType.STONE).strength(0.8F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SANDSTONE_CRIM_SMOOTH = BLOCKS.register("sandstone_crim_smooth", () -> new Block(BlockBehaviour.Properties.of(Material.STONE).sound(SoundType.STONE).strength(0.8F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SANDSTONE_CRIM_CUT = BLOCKS.register("sandstone_crim_cut", () -> new Block(BlockBehaviour.Properties.of(Material.STONE).sound(SoundType.STONE).strength(0.8F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SANDSTONE_PEARL = BLOCKS.register("sandstone_pearl", () -> new Block(BlockBehaviour.Properties.of(Material.STONE).sound(SoundType.STONE).strength(0.8F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SANDSTONE_PEARL_CHISELED = BLOCKS.register("sandstone_pearl_chiseled", () -> new Block(BlockBehaviour.Properties.of(Material.STONE).sound(SoundType.STONE).strength(0.8F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SANDSTONE_PEARL_SMOOTH = BLOCKS.register("sandstone_pearl_smooth", () -> new Block(BlockBehaviour.Properties.of(Material.STONE).sound(SoundType.STONE).strength(0.8F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SANDSTONE_PEARL_CUT = BLOCKS.register("sandstone_pearl_cut", () -> new Block(BlockBehaviour.Properties.of(Material.STONE).sound(SoundType.STONE).strength(0.8F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> STONE_EBON = BLOCKS.register("stone_ebon", () -> new Block(BlockBehaviour.Properties.of(Material.STONE).sound(SoundType.STONE).strength(1.5F, 6.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> STONE_EBON_SMOOTH = BLOCKS.register("stone_ebon_smooth", () -> new Block(BlockBehaviour.Properties.of(Material.STONE).sound(SoundType.STONE).strength(1.5F, 6.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COBBLESTONE_EBON = BLOCKS.register("cobblestone_ebon", () -> new Block(BlockBehaviour.Properties.of(Material.STONE).sound(SoundType.STONE).strength(1.5F, 6.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COBBLESTONE_EBON_MOSSY = BLOCKS.register("cobblestone_ebon_mossy", () -> new Block(BlockBehaviour.Properties.of(Material.STONE).sound(SoundType.STONE).strength(1.5F, 6.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> STONEBRICK_EBON = BLOCKS.register("stonebrick_ebon", () -> new Block(BlockBehaviour.Properties.of(Material.STONE).sound(SoundType.STONE).strength(1.5F, 6.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> STONEBRICK_EBON_CRACKED = BLOCKS.register("stonebrick_ebon_cracked", () -> new Block(BlockBehaviour.Properties.of(Material.STONE).sound(SoundType.STONE).strength(1.5F, 6.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> STONEBRICK_EBON_CHISELED = BLOCKS.register("stonebrick_ebon_chiseled", () -> new Block(BlockBehaviour.Properties.of(Material.STONE).sound(SoundType.STONE).strength(1.5F, 6.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> STONEBRICK_EBON_MOSSY = BLOCKS.register("stonebrick_ebon_mossy", () -> new Block(BlockBehaviour.Properties.of(Material.STONE).sound(SoundType.STONE).strength(1.5F, 6.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> STONE_CRIM = BLOCKS.register("stone_crim", () -> new Block(BlockBehaviour.Properties.of(Material.STONE).sound(SoundType.STONE).strength(1.5F, 6.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> STONE_CRIM_SMOOTH = BLOCKS.register("stone_crim_smooth", () -> new Block(BlockBehaviour.Properties.of(Material.STONE).sound(SoundType.STONE).strength(1.5F, 6.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COBBLESTONE_CRIM = BLOCKS.register("cobblestone_crim", () -> new Block(BlockBehaviour.Properties.of(Material.STONE).sound(SoundType.STONE).strength(1.5F, 6.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COBBLESTONE_CRIM_MOSSY = BLOCKS.register("cobblestone_crim_mossy", () -> new Block(BlockBehaviour.Properties.of(Material.STONE).sound(SoundType.STONE).strength(1.5F, 6.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> STONEBRICK_CRIM = BLOCKS.register("stonebrick_crim", () -> new Block(BlockBehaviour.Properties.of(Material.STONE).sound(SoundType.STONE).strength(1.5F, 6.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> STONEBRICK_CRIM_CRACKED = BLOCKS.register("stonebrick_crim_cracked", () -> new Block(BlockBehaviour.Properties.of(Material.STONE).sound(SoundType.STONE).strength(1.5F, 6.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> STONEBRICK_CRIM_CHISELED = BLOCKS.register("stonebrick_crim_chiseled", () -> new Block(BlockBehaviour.Properties.of(Material.STONE).sound(SoundType.STONE).strength(1.5F, 6.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> STONEBRICK_CRIM_MOSSY = BLOCKS.register("stonebrick_crim_mossy", () -> new Block(BlockBehaviour.Properties.of(Material.STONE).sound(SoundType.STONE).strength(1.5F, 6.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> STONE_PEARL = BLOCKS.register("stone_pearl", () -> new Block(BlockBehaviour.Properties.of(Material.STONE).sound(SoundType.STONE).strength(1.5F, 6.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> STONE_PEARL_SMOOTH = BLOCKS.register("stone_pearl_smooth", () -> new Block(BlockBehaviour.Properties.of(Material.STONE).sound(SoundType.STONE).strength(1.5F, 6.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COBBLESTONE_PEARL = BLOCKS.register("cobblestone_pearl", () -> new Block(BlockBehaviour.Properties.of(Material.STONE).sound(SoundType.STONE).strength(1.5F, 6.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COBBLESTONE_PEARL_MOSSY = BLOCKS.register("cobblestone_pearl_mossy", () -> new Block(BlockBehaviour.Properties.of(Material.STONE).sound(SoundType.STONE).strength(1.5F, 6.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> STONEBRICK_PEARL = BLOCKS.register("stonebrick_pearl", () -> new Block(BlockBehaviour.Properties.of(Material.STONE).sound(SoundType.STONE).strength(1.5F, 6.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> STONEBRICK_PEARL_CRACKED = BLOCKS.register("stonebrick_pearl_cracked", () -> new Block(BlockBehaviour.Properties.of(Material.STONE).sound(SoundType.STONE).strength(1.5F, 6.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> STONEBRICK_PEARL_CHISELED = BLOCKS.register("stonebrick_pearl_chiseled", () -> new Block(BlockBehaviour.Properties.of(Material.STONE).sound(SoundType.STONE).strength(1.5F, 6.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> STONEBRICK_PEARL_MOSSY = BLOCKS.register("stonebrick_pearl_mossy", () -> new Block(BlockBehaviour.Properties.of(Material.STONE).sound(SoundType.STONE).strength(1.5F, 6.0F).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> STONE_MOSS_RED = BLOCKS.register("stone_moss_red", () -> new TerraBlockMoss(BlockBehaviour.Properties.of(Material.PLANT).sound(SoundType.GRASS).strength(1.5F).noDrops().instabreak(), TerraBlockRegistry.PLANT_MOSS_RED.get()));
    public static final RegistryObject<Block> STONE_MOSS_FIRE = BLOCKS.register("stone_moss_fire", () -> new TerraBlockMoss(BlockBehaviour.Properties.of(Material.PLANT).sound(SoundType.GRASS).strength(1.5F).noDrops().instabreak(), TerraBlockRegistry.PLANT_MOSS_FIRE.get()));
    public static final RegistryObject<Block> STONE_MOSS_YELLOW = BLOCKS.register("stone_moss_yellow", () -> new TerraBlockMoss(BlockBehaviour.Properties.of(Material.PLANT).sound(SoundType.GRASS).strength(1.5F).noDrops().instabreak(), TerraBlockRegistry.PLANT_MOSS_YELLOW.get()));
    public static final RegistryObject<Block> STONE_MOSS_GREEN = BLOCKS.register("stone_moss_green", () -> new TerraBlockMoss(BlockBehaviour.Properties.of(Material.PLANT).sound(SoundType.GRASS).strength(1.5F).noDrops().instabreak(), TerraBlockRegistry.PLANT_MOSS_GREEN.get()));
    public static final RegistryObject<Block> STONE_MOSS_BLUE = BLOCKS.register("stone_moss_blue", () -> new TerraBlockMoss(BlockBehaviour.Properties.of(Material.PLANT).sound(SoundType.GRASS).strength(1.5F).noDrops().instabreak(), TerraBlockRegistry.PLANT_MOSS_BLUE.get()));
    public static final RegistryObject<Block> STONE_MOSS_PURPLE = BLOCKS.register("stone_moss_purple", () -> new TerraBlockMoss(BlockBehaviour.Properties.of(Material.PLANT).sound(SoundType.GRASS).strength(1.5F).noDrops().instabreak(), TerraBlockRegistry.PLANT_MOSS_PURPLE.get()));
    public static final RegistryObject<Block> STONE_GRANITE = BLOCKS.register("stone_granite", () -> new Block(BlockBehaviour.Properties.of(Material.STONE).sound(SoundType.STONE).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> STONE_MARBLE = BLOCKS.register("stone_marble", () -> new Block(BlockBehaviour.Properties.of(Material.STONE).sound(SoundType.STONE).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> STONE_FOSSIL = BLOCKS.register("stone_fossil", () -> new Block(BlockBehaviour.Properties.of(Material.STONE).sound(SoundType.STONE).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> ICE_PURPLE = BLOCKS.register("ice_purple", () -> new TerraBlockIce(BlockBehaviour.Properties.of(Material.ICE).sound(SoundType.GLASS).friction(0.98F).strength(0.5F).noOcclusion(), TerraReforged.BOREAL));
    public static final RegistryObject<Block> ICE_HARD_PURPLE = BLOCKS.register("ice_hard_purple", () -> new TerraBlockPlantable(BlockBehaviour.Properties.of(Material.ICE_SOLID).sound(SoundType.GLASS).strength(0.8F), TerraReforged.BOREAL));
    public static final RegistryObject<Block> ICE_RED = BLOCKS.register("ice_red", () -> new TerraBlockIce(BlockBehaviour.Properties.of(Material.ICE).sound(SoundType.GLASS).friction(0.98F).strength(0.5F).noOcclusion(), TerraReforged.BOREAL));
    public static final RegistryObject<Block> ICE_HARD_RED = BLOCKS.register("ice_hard_red", () -> new TerraBlockPlantable(BlockBehaviour.Properties.of(Material.ICE_SOLID).sound(SoundType.GLASS).strength(0.8F), TerraReforged.BOREAL));
    public static final RegistryObject<Block> ICE_PINK = BLOCKS.register("ice_pink", () -> new TerraBlockIce(BlockBehaviour.Properties.of(Material.ICE).sound(SoundType.GLASS).friction(0.98F).strength(0.5F).noOcclusion(), TerraReforged.BOREAL));
    public static final RegistryObject<Block> ICE_HARD_PINK = BLOCKS.register("ice_hard_pink", () -> new TerraBlockPlantable(BlockBehaviour.Properties.of(Material.ICE_SOLID).sound(SoundType.GLASS).strength(0.8F), TerraReforged.BOREAL));
    public static final RegistryObject<Block> ICE_THIN = BLOCKS.register("ice_thin", () -> new TerraBlockThinIce(BlockBehaviour.Properties.of(Material.ICE).sound(SoundType.GLASS).friction(0.98F).strength(0.25F).noOcclusion().noDrops()));

    //Woods
    public static final RegistryObject<Block> LOG_BOREAL = BLOCKS.register("log_boreal", () -> new RotatedPillarBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_BROWN).sound(SoundType.WOOD).strength(2.0F)));
    public static final RegistryObject<Block> LOG_PALM = BLOCKS.register("log_palm", () -> new RotatedPillarBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_YELLOW).sound(SoundType.WOOD).strength(2.0F)));
    public static final RegistryObject<Block> LOG_MAHOGANY = BLOCKS.register("log_mahogany", () -> new RotatedPillarBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.CRIMSON_NYLIUM).sound(SoundType.WOOD).strength(2.0F)));
    public static final RegistryObject<Block> LOG_EBON = BLOCKS.register("log_ebon", () -> new RotatedPillarBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_PURPLE).sound(SoundType.WOOD).strength(2.0F)));
    public static final RegistryObject<Block> LOG_SHADE = BLOCKS.register("log_shade", () -> new RotatedPillarBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_RED).sound(SoundType.WOOD).strength(2.0F)));
    public static final RegistryObject<Block> LOG_PEARL = BLOCKS.register("log_pearl", () -> new RotatedPillarBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_PINK).sound(SoundType.WOOD).strength(2.0F)));
    public static final RegistryObject<Block> LOG_BOREAL_SOLID = BLOCKS.register("log_boreal_solid", () -> new RotatedPillarBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_BROWN).sound(SoundType.WOOD).strength(2.0F)));
    public static final RegistryObject<Block> LOG_PALM_SOLID = BLOCKS.register("log_palm_solid", () -> new RotatedPillarBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_YELLOW).sound(SoundType.WOOD).strength(2.0F)));
    public static final RegistryObject<Block> LOG_MAHOGANY_SOLID = BLOCKS.register("log_mahogany_solid", () -> new RotatedPillarBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.CRIMSON_NYLIUM).sound(SoundType.WOOD).strength(2.0F)));
    public static final RegistryObject<Block> LOG_EBON_SOLID = BLOCKS.register("log_ebon_solid", () -> new RotatedPillarBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_PURPLE).sound(SoundType.WOOD).strength(2.0F)));
    public static final RegistryObject<Block> LOG_SHADE_SOLID = BLOCKS.register("log_shade_solid", () -> new RotatedPillarBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_RED).sound(SoundType.WOOD).strength(2.0F)));
    public static final RegistryObject<Block> LOG_PEARL_SOLID = BLOCKS.register("log_pearl_solid", () -> new RotatedPillarBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_PINK).sound(SoundType.WOOD).strength(2.0F)));
    public static final RegistryObject<Block> LOG_BOREAL_STRIPPED = BLOCKS.register("log_boreal_stripped", () -> new RotatedPillarBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_BROWN).sound(SoundType.WOOD).strength(2.0F)));
    public static final RegistryObject<Block> LOG_PALM_STRIPPED = BLOCKS.register("log_palm_stripped", () -> new RotatedPillarBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_YELLOW).sound(SoundType.WOOD).strength(2.0F)));
    public static final RegistryObject<Block> LOG_MAHOGANY_STRIPPED = BLOCKS.register("log_mahogany_stripped", () -> new RotatedPillarBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.CRIMSON_NYLIUM).sound(SoundType.WOOD).strength(2.0F)));
    public static final RegistryObject<Block> LOG_EBON_STRIPPED = BLOCKS.register("log_ebon_stripped", () -> new RotatedPillarBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_PURPLE).sound(SoundType.WOOD).strength(2.0F)));
    public static final RegistryObject<Block> LOG_SHADE_STRIPPED = BLOCKS.register("log_shade_stripped", () -> new RotatedPillarBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_RED).sound(SoundType.WOOD).strength(2.0F)));
    public static final RegistryObject<Block> LOG_PEARL_STRIPPED = BLOCKS.register("log_pearl_stripped", () -> new RotatedPillarBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_PINK).sound(SoundType.WOOD).strength(2.0F)));
    public static final RegistryObject<Block> LOG_BOREAL_SOLID_STRIPPED = BLOCKS.register("log_boreal_solid_stripped", () -> new RotatedPillarBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_BROWN).sound(SoundType.WOOD).strength(2.0F)));
    public static final RegistryObject<Block> LOG_PALM_SOLID_STRIPPED = BLOCKS.register("log_palm_solid_stripped", () -> new RotatedPillarBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_YELLOW).sound(SoundType.WOOD).strength(2.0F)));
    public static final RegistryObject<Block> LOG_MAHOGANY_SOLID_STRIPPED = BLOCKS.register("log_mahogany_solid_stripped", () -> new RotatedPillarBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.CRIMSON_NYLIUM).sound(SoundType.WOOD).strength(2.0F)));
    public static final RegistryObject<Block> LOG_EBON_SOLID_STRIPPED = BLOCKS.register("log_ebon_solid_stripped", () -> new RotatedPillarBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_PURPLE).sound(SoundType.WOOD).strength(2.0F)));
    public static final RegistryObject<Block> LOG_SHADE_SOLID_STRIPPED = BLOCKS.register("log_shade_solid_stripped", () -> new RotatedPillarBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_RED).sound(SoundType.WOOD).strength(2.0F)));
    public static final RegistryObject<Block> LOG_PEARL_SOLID_STRIPPED = BLOCKS.register("log_pearl_solid_stripped", () -> new RotatedPillarBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_PINK).sound(SoundType.WOOD).strength(2.0F)));
    public static final RegistryObject<Block> LOG_MUSHROOM = BLOCKS.register("log_mushroom", () -> new RotatedPillarBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_CYAN).sound(SoundType.WOOD).strength(2.0F)));
    public static final RegistryObject<Block> MUSHROOM_CAP = BLOCKS.register("mushroom_cap", () -> new HugeMushroomBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_BLUE).strength(2.0F).sound(SoundType.WOOD)));
    public static final RegistryObject<Block> PLANK_BOREAL = BLOCKS.register("plank_boreal", () -> new Block(BlockBehaviour.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F)));
    public static final RegistryObject<Block> PLANK_PALM = BLOCKS.register("plank_palm", () -> new Block(BlockBehaviour.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F)));
    public static final RegistryObject<Block> PLANK_MAHOGANY = BLOCKS.register("plank_mahogany", () -> new Block(BlockBehaviour.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F)));
    public static final RegistryObject<Block> PLANK_EBON = BLOCKS.register("plank_ebon", () -> new Block(BlockBehaviour.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F)));
    public static final RegistryObject<Block> PLANK_SHADE = BLOCKS.register("plank_shade", () -> new Block(BlockBehaviour.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F)));
    public static final RegistryObject<Block> PLANK_PEARL = BLOCKS.register("plank_pearl", () -> new Block(BlockBehaviour.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F)));
    public static final RegistryObject<Block> PLANK_SPOOKY = BLOCKS.register("plank_spooky", () -> new Block(BlockBehaviour.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F)));
    public static final RegistryObject<Block> PLANK_DYNASTY = BLOCKS.register("plank_dynasty", () -> new Block(BlockBehaviour.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F)));

    //Foliage
    public static final RegistryObject<Block> PLANT_MOSS_RED = BLOCKS.register("plant_moss_red", () -> new TerraBlockMossPlant(BlockBehaviour.Properties.of(Material.PLANT).sound(SoundType.GRASS).noCollission().instabreak().strength(0.0F)));
    public static final RegistryObject<Block> PLANT_MOSS_YELLOW = BLOCKS.register("plant_moss_yellow", () -> new TerraBlockMossPlant(BlockBehaviour.Properties.of(Material.PLANT).sound(SoundType.GRASS).noCollission().instabreak().strength(0.0F)));
    public static final RegistryObject<Block> PLANT_MOSS_GREEN = BLOCKS.register("plant_moss_green", () -> new TerraBlockMossPlant(BlockBehaviour.Properties.of(Material.PLANT).sound(SoundType.GRASS).noCollission().instabreak().strength(0.0F)));
    public static final RegistryObject<Block> PLANT_MOSS_BLUE = BLOCKS.register("plant_moss_blue", () -> new TerraBlockMossPlant(BlockBehaviour.Properties.of(Material.PLANT).sound(SoundType.GRASS).noCollission().instabreak().strength(0.0F)));
    public static final RegistryObject<Block> PLANT_MOSS_PURPLE = BLOCKS.register("plant_moss_purple", () -> new TerraBlockMossPlant(BlockBehaviour.Properties.of(Material.PLANT).sound(SoundType.GRASS).noCollission().instabreak().strength(0.0F)));
    public static final RegistryObject<Block> PLANT_MOSS_FIRE = BLOCKS.register("plant_moss_fire", () -> new TerraBlockMossPlant(BlockBehaviour.Properties.of(Material.PLANT).sound(SoundType.GRASS).noCollission().instabreak().strength(0.0F)));
    public static final RegistryObject<Block> PLANT_BLINKROOT = BLOCKS.register("plant_blinkroot", () -> new TerraBlockBlinkroot(BlockBehaviour.Properties.of(Material.PLANT).sound(SoundType.CROP).noCollission().randomTicks().strength(0.0F), BlockTags.DIRT));
    public static final RegistryObject<Block> PLANT_DAYBLOOM = BLOCKS.register("plant_daybloom", () -> new TerraBlockDaybloom(BlockBehaviour.Properties.of(Material.PLANT).sound(SoundType.CROP).noCollission().randomTicks().strength(0.0F), TerraTagRegistry.DAYBLOOM_PLANTERS));
    public static final RegistryObject<Block> PLANT_DEATHWEED = BLOCKS.register("plant_deathweed", () -> new TerraBlockDeathweed(BlockBehaviour.Properties.of(Material.PLANT).sound(SoundType.CROP).noCollission().randomTicks().strength(0.0F), TerraTagRegistry.DEATHWEED_PLANTERS));
    public static final RegistryObject<Block> PLANT_FIREBLOSSOM = BLOCKS.register("plant_fireblossom", () -> new TerraBlockFireblossom(BlockBehaviour.Properties.of(Material.PLANT).sound(SoundType.CROP).noCollission().randomTicks().strength(0.0F), TerraTagRegistry.FIREBLOSSOM_PLANTERS));
    public static final RegistryObject<Block> PLANT_MOONGLOW = BLOCKS.register("plant_moonglow", () -> new TerraBlockMoonglow(BlockBehaviour.Properties.of(Material.PLANT).sound(SoundType.CROP).noCollission().randomTicks().strength(0.0F), TerraTagRegistry.MOONGLOW_PLANTERS));
    public static final RegistryObject<Block> PLANT_SHIVERTHORN = BLOCKS.register("plant_shiverthorn", () -> new TerraBlockShiverthorn(BlockBehaviour.Properties.of(Material.PLANT).sound(SoundType.CROP).noCollission().randomTicks().strength(0.0F), TerraTagRegistry.SHIVERTHORN_PLANTERS));
    public static final RegistryObject<Block> PLANT_WATERLEAF = BLOCKS.register("plant_waterleaf", () -> new TerraBlockWaterleaf(BlockBehaviour.Properties.of(Material.PLANT).sound(SoundType.CROP).noCollission().randomTicks().strength(0.0F), TerraTagRegistry.WATERLEAF_PLANTERS));
    public static final RegistryObject<Block> PLANT_MUSHROOM_GLOWING = BLOCKS.register("plant_mushroom_glowing", () -> new TerraBlockGlowingMushroom(BlockBehaviour.Properties.of(Material.PLANT).sound(SoundType.GRASS).instabreak().noCollission().strength(0.0F).randomTicks()));
    public static final RegistryObject<Block> PLANT_MUSHROOM_VILE = BLOCKS.register("plant_mushroom_vile", () -> new TerraBlockMushroom(BlockBehaviour.Properties.of(Material.PLANT).sound(SoundType.GRASS).noCollission().instabreak().strength(0.0F)));
    public static final RegistryObject<Block> PLANT_MUSHROOM_VICIOUS = BLOCKS.register("plant_mushroom_vicious", () -> new TerraBlockMushroom(BlockBehaviour.Properties.of(Material.PLANT).sound(SoundType.GRASS).noCollission().instabreak().strength(0.0F)));
    public static final RegistryObject<Block> PLANT_LIFEFRUIT = BLOCKS.register("plant_lifefruit", () -> new TerraBlockLifeFruit(BlockBehaviour.Properties.of(Material.PLANT).sound(SoundType.GRASS).noCollission().strength(0.0F)));
}
